{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
}}
{{!
    @template theme_space/secure

    space secure layout template.

    Context variables required for this template:
    * sitename - The name of the site
    * output - The core renderer for the page

      example context (json):
    {
        "sitename": "Moodle",
        "output": {
            "doctype": "<!DOCTYPE html>",
            "page_title": "Test page",
            "favicon": "favicon.ico",
            "main_content": "<h1>Headings make html validators happier</h1>"
         }
    }
}}
{{> theme_space/head }}

<body {{{ bodyattributes }}}>
{{> core/local/toast/wrapper}}
<div id="page-wrapper">

    {{{ output.standard_top_of_body_html }}}

    {{>theme_space/navbar-secure}}

    <div id="page" class="container-fluid">
        {{! Secured full header }}

        <div id="page-header" class="row">
            <div class="col-12 py-3">
                <div class="page-context-header">
                    <div class="page-header-headings">
                        {{{ output.get_quiz_name }}}
                    </div>
                </div>
            </div>
        </div>

        <div id="page-content" class="row">
            <div id="region-main-box" class="col-12">
                <section id="region-main" {{#hasblocks}}class="has-blocks"{{/hasblocks}}>
                    <div class="card card-block">
                        {{{ output.course_content_header }}}
                        {{{ output.main_content }}}
                        {{{ output.course_content_footer }}}
                    </div>
                </section>
                {{#hasblocks}}
                    <section data-region="blocks-column">
                        {{{ sidepreblocks }}}
                    </section>
                {{/hasblocks}}
            </div>
        </div>
    </div>
</div>
<footer id="page-footer" class="py-3 bg-dark text-light">
    <div class="container">
        <div id="course-footer">{{{ output.course_footer }}}</div>

        {{{ output.standard_end_of_body_html }}}
    </div>
</footer>

<!-- Modal -->
<div class="modal fade custom-modal" id="warningModal" tabindex="-1" role="dialog" aria-labelledby="warningModalLabel" aria-hidden="true">
    <div class="modal-dialog p-5" role="document">
        <div class="modal-content">
            <div class="modal-body text-center">

                <div class="modal-robot"></div>

                <h4 class="font-weight-light">
                    Don't drift off into space!
                </h4>
                <div class="font-weight-bold display-4 my-4 py-2">
                    PLEASE STAY ON THE EXAM PAGE
                </div>

            </div>
            <div class="modal-footer justify-content-center">
                <button type="button" class="btn btn-primary" data-dismiss="modal">Woops sorry!</button>
            </div>
        </div>
    </div>
</div>


</body>
</html>
{{#js}}
    M.util.js_pending('theme_space/loader');
    require(['theme_space/loader'], function() {
    M.util.js_complete('theme_space/loader');
    });
{{/js}}


<script>

    //

    const av = $('audio,video');

    let ltrc_array = {};
    let updated_array = {};
    let default_play_count = 1

    // ADD EACH AUDIO ITEM TO PAGE OBJECT IF IT DOSENT ALREADY EXIST

    av.each(function( index ) {
        let title = $(this).attr("title");
        if(jQuery.inArray(title, ltrc_array) === -1) {
            ltrc_array[title] = default_play_count;
        }
    });

    let existing_cookie = Cookies.get('ltrc');

    // IF COOKIE ALREADY EXISTS MERGE CURRENT OBJECT WITH THE NEW ONE FROM THIS PAGE

    if(existing_cookie) {
        updated_array = $.extend( ltrc_array, JSON.parse(existing_cookie) )
        Cookies.set('ltrc', JSON.stringify(updated_array), { secure: true, path: ''  });
    }

    // IF IT DOSENT EXIST CREATE ONE USING THE NEW CREATED OBJECT

    else {
        Cookies.set('ltrc', JSON.stringify(ltrc_array), { secure: true, path: ''  });
    }

    let up_to_date_cookie = JSON.parse(Cookies.get('ltrc'))

    // ATTACH LISTEN COUNT AND STOP SKIP ELEMENTS + HIDE PLAY BUTTON IN NEEDED
    // Have to wait until after the vjs player has loaded before we can attached the elements.

    setTimeout(function(){

        av.each(function( index ) {

            let title = $(this).attr("title");

            let play_count = up_to_date_cookie[title];
            if(play_count === 0) {
                $(this).closest(".video-js").find(".vjs-play-control" ).css("visibility", "hidden");
            }

            $(this).closest(".video-js").find(".vjs-play-control").after('<div id="listen_counter">'+play_count+'</div>');
            $(this).closest(".video-js").find(".vjs-progress-control").before('<div id="stop-skip"></div>');
        });

    }, 1500);

    av.each(function( index ) {

        let title = $(this).attr("title");

        // ON PLAY HIDE ALL PLAY BUTTONS ON PAGE

        $(this).on('play', function (e) {
            $( ".vjs-play-control" ).css("visibility", "hidden");
        });

        // WHEN RECORDING HAS FINISHED

        $(this).on('ended', function (e) {

            // SHOW PLAY CONTROL

            $( ".vjs-play-control" ).css("visibility", "visible");

            // UPDATE COOKIE

            let play_count = up_to_date_cookie[title] -1;
            up_to_date_cookie[title] = play_count;
            Cookies.set('ltrc', JSON.stringify(up_to_date_cookie), { secure: true, path: ''  });

            // UPDATE DISPLAYED PLAY COUNTER

            $(this).closest(".video-js").find("#listen_counter").html(play_count);

            // HIDE PLAY CONTROL

            if(play_count === 0) {
                $(this).closest(".video-js").find(".vjs-play-control" ).css("visibility", "hidden");
            }

        });

    });



    let forms = document.getElementsByTagName("form");
    for(let i = 0; i < forms.length; i++){
        forms[i].setAttribute("spellcheck", "false");
        forms[i].setAttribute("autocomplete", "off");
    }

    let inputs = document.getElementsByTagName("input");
    for(let i = 0; i < inputs.length; i++){
        inputs[i].setAttribute("spellcheck", "false");
        inputs[i].setAttribute("data-gramm", "false");
        inputs[i].setAttribute("autocomplete", "new-password");

    }

    // Leave Screen

    let count = 0;
    let exam = 'live';
    let state = 'focus';
    let msg1 = null;

    $(document).on("mouseleave", function(e) {

        state = 'blur';

        if(exam === 'live') {

            msg1 = setTimeout(function () {

                if (state === 'blur' && count === 0) {

                    // $('#warningModal').modal('show')
                    count++;
                }

            }, 6000);
        }
    });

    $(document).on("mouseenter", function(e) {
        state = 'focus';
        clearInterval(msg1);
    });

    $(window).on("focus", function(e) {
        state = 'focus';
        clearInterval(msg1);
    });




</script>

